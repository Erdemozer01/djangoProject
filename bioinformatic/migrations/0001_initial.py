# Generated by Django 3.2.16 on 2023-08-19 02:53

import bioinformatic.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BigFileUploadModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('big_file', models.FileField(upload_to='laboratory/bigfile/', verbose_name='Dosya Seçme')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': 'bigfile',
                'verbose_name_plural': 'bigfile',
                'db_table': 'bigfile',
            },
        ),
        migrations.CreateModel(
            name='BiologicalResourcesDatabases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Kaynak')),
                ('url', models.URLField(verbose_name='URL')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
            ],
            options={
                'verbose_name': 'Biyolojik Kaynaklar ve Veri Tabanları',
                'verbose_name_plural': 'Biyolojik Kaynaklar ve Veri Tabanları',
            },
        ),
        migrations.CreateModel(
            name='DiagramModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('out_file', models.FileField(blank=True, null=True, upload_to=bioinformatic.models.upload_to_diagram)),
                ('image', models.ImageField(upload_to=bioinformatic.models.upload_to_diagram)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Laborant')),
            ],
        ),
        migrations.CreateModel(
            name='FastaRead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene', models.CharField(max_length=1000)),
                ('sequence', models.TextField()),
            ],
            options={
                'verbose_name': 'Fasta Okuması',
                'verbose_name_plural': 'Fasta Okumaları',
                'db_table': 'fasta_read',
            },
        ),
        migrations.CreateModel(
            name='FileFormat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Dosya Formatı')),
            ],
        ),
        migrations.CreateModel(
            name='FileUploadModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='laboratory/bigfile/', verbose_name='Dosya Seçme')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': 'file',
                'verbose_name_plural': 'files',
                'db_table': 'file',
            },
        ),
        migrations.CreateModel(
            name='GenbankRead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organism', models.CharField(max_length=1000, verbose_name='Organizma')),
                ('description', models.CharField(max_length=1000, verbose_name='Tanım')),
                ('protein_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='protein_id')),
                ('taxonomy', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Taksonomi')),
                ('dna_sequence', models.TextField()),
                ('dna_sequence_len', models.BigIntegerField(blank=True, null=True, verbose_name='DNA Uzunluğu')),
                ('protein_sequence', models.TextField(blank=True, null=True)),
                ('protein_sequence_len', models.BigIntegerField(blank=True, null=True, verbose_name='Protein Uzunluğu')),
            ],
            options={
                'verbose_name': 'Genbank Okuması',
                'verbose_name_plural': 'Genbank Okumaları',
                'db_table': 'genbank_read',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='LabSlideModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='laboratory/slide/')),
                ('title', models.CharField(max_length=100, verbose_name='Başlık')),
                ('text', models.CharField(max_length=100, verbose_name='Alt Başlık:')),
                ('content', models.TextField(verbose_name='İçerik')),
            ],
            options={
                'verbose_name': 'Slide',
                'verbose_name_plural': 'Slide',
                'db_table': 'bioinformatic_home',
            },
        ),
        migrations.CreateModel(
            name='MaximumFileSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_size', models.BigIntegerField()),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
            ],
        ),
        migrations.CreateModel(
            name='MedlineArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('article_id', models.CharField(max_length=1000)),
                ('doi', models.CharField(default='', max_length=1000)),
                ('title', models.CharField(max_length=1000)),
                ('term', models.CharField(max_length=1000)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
            ],
        ),
        migrations.CreateModel(
            name='PubMedArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('article_id', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=1000)),
                ('link', models.URLField(default='https://pubmed.ncbi.nlm.nih.gov/')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
            ],
            options={
                'verbose_name': 'PubMed Makale',
                'verbose_name_plural': 'PubMed Makale',
            },
        ),
        migrations.CreateModel(
            name='SwissProtModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accessions', models.CharField(max_length=1000, verbose_name='Erişim Numarası')),
                ('organism', models.CharField(max_length=1000, verbose_name='Organizma')),
                ('sequence', models.TextField(verbose_name='Sekans')),
                ('sequence_length', models.CharField(max_length=1000, verbose_name='Sekans Uzunluğu')),
            ],
            options={
                'verbose_name': 'swiss-prot',
                'verbose_name_plural': 'swiss-prot',
                'db_table': 'swiss-prot',
            },
        ),
        migrations.CreateModel(
            name='RestrictionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enzymes', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Enzim Adı:')),
                ('site', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Bölge:')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bioinformatic.diagrammodel', verbose_name='Laborant')),
            ],
        ),
        migrations.CreateModel(
            name='MultipleSequenceAlignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('', '------------'), ('muscle', 'Muscle'), ('clustalw2', 'ClustalW2'), ('omega', 'Clustal Omega'), ('paml', 'Maximum Likelihood (PAML)')], max_length=1000, verbose_name='Multiple Sekans Alignment Aracı')),
                ('tree_type', models.CharField(choices=[('', '------------'), ('nj', 'Neighbor Joining'), ('upgma', 'UPGMA')], max_length=1000, verbose_name='Filogenetik Ağaç Türü')),
                ('molecule_type', models.CharField(choices=[('', '------------'), ('DNA', 'DNA'), ('RNA', 'RNA'), ('protein', 'PROTEİN')], max_length=1000, verbose_name='Molekül Tipi')),
                ('palm_tools', models.CharField(blank=True, choices=[('', '------------'), ('baseml', 'BASEML'), ('basemlg', 'BASEMLG'), ('codeml', 'CODEML')], max_length=1000, null=True, verbose_name='Maximum Likelihood (PAML)')),
                ('alignment_filetype', models.CharField(choices=[('', '------------'), ('fasta', 'FASTA'), ('clustal', 'CLUSTAL'), ('phylip', 'PHYLİB'), ('nexus', 'NEXUS')], max_length=1000, verbose_name='Alignment Dosya Tipi')),
                ('in_file', models.FileField(blank=True, null=True, upload_to=bioinformatic.models.upload_to, verbose_name='Girdi Dosyası')),
                ('out_file', models.FileField(blank=True, null=True, upload_to=bioinformatic.models.upload_to, verbose_name='Çıktı Dosyası')),
                ('align_file', models.FileField(blank=True, null=True, upload_to=bioinformatic.models.upload_to, verbose_name='Aligned Dosyası')),
                ('stats', models.FileField(blank=True, null=True, upload_to=bioinformatic.models.upload_to, verbose_name='İstatistik Dosyası')),
                ('scores', models.FileField(blank=True, null=True, upload_to=bioinformatic.models.upload_to, verbose_name='Alignment Scor Dosyası')),
                ('ml_file', models.FileField(blank=True, null=True, upload_to=bioinformatic.models.upload_to, verbose_name='Maximum Likelihood')),
                ('tree_file', models.FileField(blank=True, null=True, upload_to=bioinformatic.models.upload_to, verbose_name='Filogenetik Ağaç Dosyası')),
                ('alignment_chart', models.FileField(blank=True, null=True, upload_to=bioinformatic.models.upload_to, verbose_name='Aligment Haritası')),
                ('tree', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Filogenetik Ağaç')),
                ('cluster_csv', models.FileField(blank=True, null=True, upload_to=bioinformatic.models.upload_to, verbose_name='ClusterGram CSV Dosyası')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Laborant')),
            ],
            options={
                'verbose_name': 'Multiple Sequence Alignment',
                'verbose_name_plural': 'Multiple Sequence Alignment',
                'db_table': 'msa',
            },
        ),
        migrations.CreateModel(
            name='MolecularModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_file', models.FileField(blank=True, null=True, upload_to=bioinformatic.models.molecule_upload_to2, verbose_name='PDB Dosyası')),
                ('file_path', models.FilePathField(blank=True, null=True, path=bioinformatic.models.molecule_path, recursive=True)),
                ('file_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Dosya Adı:')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Adı:')),
                ('author', models.CharField(blank=True, max_length=100, null=True, verbose_name='Yazar:')),
                ('head', models.CharField(blank=True, max_length=100, null=True, verbose_name='Özellik:')),
                ('id_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='id cod:')),
                ('keywords', models.CharField(blank=True, max_length=100, null=True, verbose_name='Kategori:')),
                ('id_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='id:')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Laborant')),
            ],
        ),
        migrations.CreateModel(
            name='GraphicModels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('graph_type', models.CharField(max_length=1000, verbose_name='Grafik Türü')),
                ('format', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Dosya Formatı')),
                ('histogram_plot', models.ImageField(blank=True, null=True, upload_to=bioinformatic.models.upload_to_graphic, verbose_name='Histogram')),
                ('gc_plot', models.ImageField(blank=True, null=True, upload_to=bioinformatic.models.upload_to_graphic, verbose_name='%GC Plot')),
                ('dot_plot', models.ImageField(blank=True, null=True, upload_to=bioinformatic.models.upload_to_graphic, verbose_name='Dot Plot')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Laborant')),
            ],
        ),
        migrations.CreateModel(
            name='FastaDNAMotifModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motif_file', models.FileField(upload_to=bioinformatic.models.upload_to_motif, verbose_name='Motif Nucleotit Sekans Dosyası')),
                ('mpf', models.FileField(blank=True, null=True, upload_to=bioinformatic.models.upload_to_motif, verbose_name='Nucleotide matrix position')),
                ('pwm', models.FileField(blank=True, null=True, upload_to=bioinformatic.models.upload_to_motif, verbose_name='Compute position weight matrices')),
                ('pssm', models.FileField(blank=True, null=True, upload_to=bioinformatic.models.upload_to_motif, verbose_name='Compute position weight matrices')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Laborant')),
            ],
            options={
                'verbose_name': 'Fasta DNA Sekans Motif',
                'verbose_name_plural': 'Fasta DNA Sekans Motif',
            },
        ),
        migrations.CreateModel(
            name='BlastQueryResults',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program', models.CharField(choices=[('', '------------'), ('blastn', 'BLASTN'), ('blastp', 'BLASTP'), ('blastx', 'BLASTX'), ('tblastn', 'TBLASTN'), ('tblastn', 'TBLASTN')], max_length=1000, verbose_name='Blast Programı Seçiniz')),
                ('database', models.CharField(choices=[('', '------------'), ('nr', 'BLASTN'), ('nt', 'BLASTP')], max_length=1000, verbose_name='Blast Programı Seçiniz')),
                ('input_file', models.FileField(upload_to=bioinformatic.models.upload_to_blast, verbose_name='Fasta Dosyası')),
                ('output_file', models.FileField(blank=True, null=True, upload_to=bioinformatic.models.upload_to_blast, verbose_name='BlastXML Dosyası')),
                ('hsp_file', models.FileField(blank=True, null=True, upload_to=bioinformatic.models.upload_to_blast, verbose_name='HSP Dosyası')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Laborant')),
            ],
            options={
                'verbose_name': 'Blast Metodu',
                'verbose_name_plural': 'Blast Metodu',
            },
        ),
    ]
